{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subod\\\\Downloads\\\\data-interactive-app\\\\frontend\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [newRow, setNewRow] = useState({});\n  const [editingIndex, setEditingIndex] = useState(null);\n  useEffect(() => {\n    // Fetch data from the backend API\n    fetch(\"http://127.0.0.1:5000/data\").then(response => response.json()).then(data => {\n      console.log(\"Fetched data:\", data); // Debug fetched data\n      setData(data);\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  // Function to handle adding a new row\n  const handleAddRow = () => {\n    fetch(\"http://127.0.0.1:5000/data\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newRow)\n    }).then(() => {\n      setData([...data, newRow]);\n      setNewRow({}); // Clear the input fields after adding\n    }).catch(error => console.error(\"Error adding row:\", error));\n  };\n\n  // Function to handle deleting a row\n  const handleDelete = index => {\n    fetch(`http://127.0.0.1:5000/data/${index}`, {\n      method: \"DELETE\"\n    }).then(() => setData(data.filter((_, i) => i !== index))).catch(error => console.error(\"Error deleting row:\", error));\n  };\n\n  // Function to start editing a row\n  const handleEdit = index => {\n    const rowToEdit = data[index];\n    setNewRow(rowToEdit); // Populate the input fields with the row's data\n    setEditingIndex(index); // Set the index of the row being edited\n  };\n\n  // Function to save the edited row\n  const handleSaveEdit = () => {\n    fetch(\"http://127.0.0.1:5000/data\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        index: editingIndex,\n        row: newRow\n      })\n    }).then(() => {\n      const updatedData = [...data];\n      updatedData[editingIndex] = newRow;\n      setData(updatedData);\n      setNewRow({}); // Clear the input fields after saving\n      setEditingIndex(null); // Exit edit mode\n    }).catch(error => console.error(\"Error editing row:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: editingIndex !== null ? \"Edit Row\" : \"Add New Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), Object.keys(data[0] || {}).map(key => /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: key,\n        value: newRow[key] || \"\",\n        onChange: e => setNewRow({\n          ...newRow,\n          [key]: e.target.value\n        })\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), editingIndex !== null ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveEdit,\n        children: \"Save Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRow,\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [data.length > 0 && Object.keys(data[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 49\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [Object.values(row).map((value, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"t1XDnmfH545wE7uj2AgnQ54mEt4=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DataTable","_s","data","setData","newRow","setNewRow","editingIndex","setEditingIndex","fetch","then","response","json","console","log","catch","error","handleAddRow","method","headers","body","JSON","stringify","handleDelete","index","filter","_","i","handleEdit","rowToEdit","handleSaveEdit","row","updatedData","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","placeholder","value","onChange","e","target","onClick","length","values","_c","$RefreshReg$"],"sources":["C:/Users/subod/Downloads/data-interactive-app/frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst DataTable = () => {\r\n  const [data, setData] = useState([]);\r\n  const [newRow, setNewRow] = useState({});\r\n  const [editingIndex, setEditingIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the backend API\r\n    fetch(\"http://127.0.0.1:5000/data\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Fetched data:\", data); // Debug fetched data\r\n        setData(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  // Function to handle adding a new row\r\n  const handleAddRow = () => {\r\n    fetch(\"http://127.0.0.1:5000/data\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(newRow),\r\n    })\r\n      .then(() => {\r\n        setData([...data, newRow]);\r\n        setNewRow({}); // Clear the input fields after adding\r\n      })\r\n      .catch((error) => console.error(\"Error adding row:\", error));\r\n  };\r\n\r\n  // Function to handle deleting a row\r\n  const handleDelete = (index) => {\r\n    fetch(`http://127.0.0.1:5000/data/${index}`, { method: \"DELETE\" })\r\n      .then(() => setData(data.filter((_, i) => i !== index)))\r\n      .catch((error) => console.error(\"Error deleting row:\", error));\r\n  };\r\n\r\n  // Function to start editing a row\r\n  const handleEdit = (index) => {\r\n    const rowToEdit = data[index];\r\n    setNewRow(rowToEdit); // Populate the input fields with the row's data\r\n    setEditingIndex(index); // Set the index of the row being edited\r\n  };\r\n\r\n  // Function to save the edited row\r\n  const handleSaveEdit = () => {\r\n    fetch(\"http://127.0.0.1:5000/data\", {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ index: editingIndex, row: newRow }),\r\n    })\r\n      .then(() => {\r\n        const updatedData = [...data];\r\n        updatedData[editingIndex] = newRow;\r\n        setData(updatedData);\r\n        setNewRow({}); // Clear the input fields after saving\r\n        setEditingIndex(null); // Exit edit mode\r\n      })\r\n      .catch((error) => console.error(\"Error editing row:\", error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Data Table</h2>\r\n\r\n      {/* Add New Row / Edit Row */}\r\n      <div>\r\n        <h3>{editingIndex !== null ? \"Edit Row\" : \"Add New Row\"}</h3>\r\n        {Object.keys(data[0] || {}).map((key) => (\r\n          <input\r\n            key={key}\r\n            placeholder={key}\r\n            value={newRow[key] || \"\"}\r\n            onChange={(e) =>\r\n              setNewRow({ ...newRow, [key]: e.target.value })\r\n            }\r\n          />\r\n        ))}\r\n        {editingIndex !== null ? (\r\n          <button onClick={handleSaveEdit}>Save Edit</button>\r\n        ) : (\r\n          <button onClick={handleAddRow}>Add Row</button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Data Table */}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {data.length > 0 &&\r\n              Object.keys(data[0]).map((key) => <th key={key}>{key}</th>)}\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              {Object.values(row).map((value, i) => (\r\n                <td key={i}>{value}</td>\r\n              ))}\r\n              <td>\r\n                <button onClick={() => handleEdit(index)}>Edit</button>\r\n                <button onClick={() => handleDelete(index)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}