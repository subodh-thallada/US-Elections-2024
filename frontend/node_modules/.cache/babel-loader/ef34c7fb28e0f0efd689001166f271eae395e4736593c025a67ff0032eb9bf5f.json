{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subod\\\\Downloads\\\\data-interactive-app\\\\frontend\\\\src\\\\components\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/data\").then(response => response.json()).then(data => {\n      console.log(\"Fetched data for charts:\", data);\n      setData(data);\n    }).catch(error => console.error(\"Error fetching data for charts:\", error));\n  }, []);\n\n  // Ensure data is available\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading or no data available for charts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Extract values for the chart\n  const feature1Data = data.map(row => row.Feature_1 || 0); // Default to 0 if missing\n  const feature2Data = data.map(row => row.Feature_2 || 0); // Default to 0 if missing\n\n  const chartData = {\n    labels: data.map((_, i) => `Row ${i + 1}`),\n    datasets: [{\n      label: \"Feature 1\",\n      data: feature1Data,\n      backgroundColor: \"rgba(75, 192, 192, 0.6)\"\n    }, {\n      label: \"Feature 2\",\n      data: feature2Data,\n      backgroundColor: \"rgba(153, 102, 255, 0.6)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Charts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","Bar","jsxDEV","_jsxDEV","Charts","_s","data","setData","fetch","then","response","json","console","log","catch","error","length","children","fileName","_jsxFileName","lineNumber","columnNumber","feature1Data","map","row","Feature_1","feature2Data","Feature_2","chartData","labels","_","i","datasets","label","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/subod/Downloads/data-interactive-app/frontend/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst Charts = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:5000/data\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Fetched data for charts:\", data);\r\n        setData(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching data for charts:\", error));\r\n  }, []);\r\n\r\n  // Ensure data is available\r\n  if (!data || data.length === 0) {\r\n    return <p>Loading or no data available for charts...</p>;\r\n  }\r\n\r\n  // Extract values for the chart\r\n  const feature1Data = data.map((row) => row.Feature_1 || 0); // Default to 0 if missing\r\n  const feature2Data = data.map((row) => row.Feature_2 || 0); // Default to 0 if missing\r\n\r\n  const chartData = {\r\n    labels: data.map((_, i) => `Row ${i + 1}`),\r\n    datasets: [\r\n      {\r\n        label: \"Feature 1\",\r\n        data: feature1Data,\r\n        backgroundColor: \"rgba(75, 192, 192, 0.6)\",\r\n      },\r\n      {\r\n        label: \"Feature 2\",\r\n        data: feature2Data,\r\n        backgroundColor: \"rgba(153, 102, 255, 0.6)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Data Charts</h2>\r\n      <Bar data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEH,IAAI,IAAK;MACdM,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEP,IAAI,CAAC;MAC7CC,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC,CAAC;EAC9E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACT,IAAI,IAAIA,IAAI,CAACU,MAAM,KAAK,CAAC,EAAE;IAC9B,oBAAOb,OAAA;MAAAc,QAAA,EAAG;IAA0C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1D;;EAEA;EACA,MAAMC,YAAY,GAAGhB,IAAI,CAACiB,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAMC,YAAY,GAAGpB,IAAI,CAACiB,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACG,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE5D,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEvB,IAAI,CAACiB,GAAG,CAAC,CAACO,CAAC,EAAEC,CAAC,KAAK,OAAOA,CAAC,GAAG,CAAC,EAAE,CAAC;IAC1CC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClB3B,IAAI,EAAEgB,YAAY;MAClBY,eAAe,EAAE;IACnB,CAAC,EACD;MACED,KAAK,EAAE,WAAW;MAClB3B,IAAI,EAAEoB,YAAY;MAClBQ,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBACE/B,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA,CAACF,GAAG;MAACK,IAAI,EAAEsB;IAAU;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5CID,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AA8CZ,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}