{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subod\\\\Downloads\\\\STS Task\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [googleEarthImage, setGoogleEarthImage] = useState(null);\n  const [bettingOdds, setBettingOdds] = useState([]);\n  const [pollingData, setPollingData] = useState([]);\n  const [pollingVisualization, setPollingVisualization] = useState(null);\n  const fetchGoogleEarthImage = async location => {\n    const response = await axios.get('http://127.0.0.1:5000/google-earth', {\n      params: {\n        location\n      }\n    });\n    setGoogleEarthImage(response.data.image_url);\n  };\n  const fetchBettingOdds = async () => {\n    const response = await axios.get('http://127.0.0.1:5000/betting-odds');\n    setBettingOdds(response.data);\n  };\n  const fetchPollingData = async () => {\n    const response = await axios.get('http://127.0.0.1:5000/polling-data');\n    setPollingData(response.data);\n  };\n  const fetchPollingVisualization = async () => {\n    const response = await axios.get('http://127.0.0.1:5000/polling-visualization');\n    setPollingVisualization(response.data.image_data);\n  };\n  useEffect(() => {\n    fetchBettingOdds();\n    fetchPollingData();\n    fetchPollingVisualization();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Interactive Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Google Earth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter location\",\n        onBlur: e => fetchGoogleEarthImage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), googleEarthImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: googleEarthImage,\n        alt: \"Google Earth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Betting Odds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: bettingOdds.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.date, \": \", item.candidate, \" - \", item.odds, \"%\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Polling Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pollingData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.state, \": Candidate A - \", item.candidate_a, \"%, Candidate B - \", item.candidate_b, \"%\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Polling Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), pollingVisualization && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pollingVisualization,\n        alt: \"Polling Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UmjsXV7L4khE3VAkODJ4f9l9lZk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","googleEarthImage","setGoogleEarthImage","bettingOdds","setBettingOdds","pollingData","setPollingData","pollingVisualization","setPollingVisualization","fetchGoogleEarthImage","location","response","get","params","data","image_url","fetchBettingOdds","fetchPollingData","fetchPollingVisualization","image_data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onBlur","e","target","value","src","alt","map","item","index","date","candidate","odds","state","candidate_a","candidate_b","_c","$RefreshReg$"],"sources":["C:/Users/subod/Downloads/STS Task/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [googleEarthImage, setGoogleEarthImage] = useState(null);\r\n  const [bettingOdds, setBettingOdds] = useState([]);\r\n  const [pollingData, setPollingData] = useState([]);\r\n  const [pollingVisualization, setPollingVisualization] = useState(null);\r\n\r\n  const fetchGoogleEarthImage = async (location) => {\r\n    const response = await axios.get('http://127.0.0.1:5000/google-earth', {\r\n      params: { location }\r\n    });\r\n    setGoogleEarthImage(response.data.image_url);\r\n  };\r\n\r\n  const fetchBettingOdds = async () => {\r\n    const response = await axios.get('http://127.0.0.1:5000/betting-odds');\r\n    setBettingOdds(response.data);\r\n  };\r\n\r\n  const fetchPollingData = async () => {\r\n    const response = await axios.get('http://127.0.0.1:5000/polling-data');\r\n    setPollingData(response.data);\r\n  };\r\n\r\n  const fetchPollingVisualization = async () => {\r\n    const response = await axios.get('http://127.0.0.1:5000/polling-visualization');\r\n    setPollingVisualization(response.data.image_data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBettingOdds();\r\n    fetchPollingData();\r\n    fetchPollingVisualization();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Interactive Data Visualization</h1>\r\n\r\n      <div>\r\n        <h2>Google Earth</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter location\"\r\n          onBlur={(e) => fetchGoogleEarthImage(e.target.value)}\r\n        />\r\n        {googleEarthImage && <img src={googleEarthImage} alt=\"Google Earth\" />}\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Betting Odds</h2>\r\n        <ul>\r\n          {bettingOdds.map((item, index) => (\r\n            <li key={index}>\r\n              {item.date}: {item.candidate} - {item.odds}%\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Polling Data</h2>\r\n        <ul>\r\n          {pollingData.map((item, index) => (\r\n            <li key={index}>\r\n              {item.state}: Candidate A - {item.candidate_a}%, Candidate B - {item.candidate_b}%\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Polling Visualization</h2>\r\n        {pollingVisualization && <img src={pollingVisualization} alt=\"Polling Visualization\" />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}