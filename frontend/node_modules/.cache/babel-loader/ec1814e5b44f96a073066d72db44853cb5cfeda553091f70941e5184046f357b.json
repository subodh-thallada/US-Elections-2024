{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subod\\\\Downloads\\\\STS Task\\\\frontend\\\\src\\\\components\\\\PollingVisualization.js\";\nimport React from 'react';\nimport { Bar, BarChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n// Static betting odds data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bettingOddsData = [{\n  state: \"Alabama\",\n  dem_percentage: \"34%\",\n  rep_percentage: \"65%\"\n}, {\n  state: \"Alaska\",\n  dem_percentage: \"41%\",\n  rep_percentage: \"55%\"\n}\n// ... existing data ...\n];\n\n// Convert percentages to numbers for the chart\nconst chartData = bettingOddsData.map(item => ({\n  state: item.state,\n  democrat: parseFloat(item.dem_percentage),\n  republican: parseFloat(item.rep_percentage)\n}));\nconst PollingVisualization = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Polling Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '500px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"democrat\",\n            fill: \"#0000FF\",\n            name: \"Democrat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"republican\",\n            fill: \"#FF0000\",\n            name: \"Republican\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = PollingVisualization;\nexport default PollingVisualization;\nvar _c;\n$RefreshReg$(_c, \"PollingVisualization\");","map":{"version":3,"names":["React","Bar","BarChart","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","bettingOddsData","state","dem_percentage","rep_percentage","chartData","map","item","democrat","parseFloat","republican","PollingVisualization","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","data","strokeDasharray","dataKey","fill","name","_c","$RefreshReg$"],"sources":["C:/Users/subod/Downloads/STS Task/frontend/src/components/PollingVisualization.js"],"sourcesContent":["import React from 'react';\r\nimport { Bar, BarChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n// Static betting odds data\r\nconst bettingOddsData = [\r\n  { state: \"Alabama\", dem_percentage: \"34%\", rep_percentage: \"65%\" },\r\n  { state: \"Alaska\", dem_percentage: \"41%\", rep_percentage: \"55%\" },\r\n  // ... existing data ...\r\n];\r\n\r\n// Convert percentages to numbers for the chart\r\nconst chartData = bettingOddsData.map(item => ({\r\n  state: item.state,\r\n  democrat: parseFloat(item.dem_percentage),\r\n  republican: parseFloat(item.rep_percentage),\r\n}));\r\n\r\nconst PollingVisualization = () => {\r\n  return (\r\n    <div>\r\n      <h2>Polling Visualization</h2>\r\n      <div style={{ height: '500px', width: '100%' }}>\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <BarChart data={chartData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"state\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"democrat\" fill=\"#0000FF\" name=\"Democrat\" />\r\n            <Bar dataKey=\"republican\" fill=\"#FF0000\" name=\"Republican\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollingVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}