'use strict';

var $TypeError = require('es-errors/type');

var CreateDataProperty = require('./CreateDataProperty');
<<<<<<< HEAD

var isObject = require('../helpers/isObject');
var isPropertyKey = require('../helpers/isPropertyKey');
=======
var IsPropertyKey = require('./IsPropertyKey');
var Type = require('./Type');
>>>>>>> 680064e5fdc85884a37bd24dfb3394d654d8dfba

// // https://262.ecma-international.org/6.0/#sec-createdatapropertyorthrow

module.exports = function CreateDataPropertyOrThrow(O, P, V) {
<<<<<<< HEAD
	if (!isObject(O)) {
		throw new $TypeError('Assertion failed: Type(O) is not Object');
	}
	if (!isPropertyKey(P)) {
		throw new $TypeError('Assertion failed: P is not a Property Key');
=======
	if (Type(O) !== 'Object') {
		throw new $TypeError('Assertion failed: Type(O) is not Object');
	}
	if (!IsPropertyKey(P)) {
		throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');
>>>>>>> 680064e5fdc85884a37bd24dfb3394d654d8dfba
	}
	var success = CreateDataProperty(O, P, V);
	if (!success) {
		throw new $TypeError('unable to create data property');
	}
	return success;
};
